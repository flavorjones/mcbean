#!/usr/bin/env ruby

require 'open-uri'
require 'rubygems'
require 'mcbean'
require 'getoptlong'

SCRIPT = File.basename(__FILE__)
@input_format  = "html"
@output_format = "markdown"
@input_file    = nil

OPTS = []
McBean.formats.each do |format|
  OPTS << [ "--#{format}", "-#{format[0,1]}", GetoptLong::REQUIRED_ARGUMENT ]
  OPTS << [ "--to-#{format}", "-#{format[0,1].upcase}", GetoptLong::NO_ARGUMENT ]
end

def _usage
  puts "USAGE: #{SCRIPT} [--<FROM_FORMAT>=]<FILE-OR-URL> [--to-<TO_FORMAT>]"
  puts
  puts "     McBean transforms a file from one format to another, for your reading pleasure."
  puts
  puts "     e.g.:"
  puts "       #{SCRIPT} --html=\"http://en.wikipedia.org/wiki/The_Sneetches_and_Other_Stories\" --to-markdown"
  puts "       #{SCRIPT} --markdown=\"sneetches.md\" --to-textile"
  puts
  puts "     If FROM_FORMAT option is not specified, --#{@input_format} is assumed"
  puts "     If TO_FORMAT option is not specified, --to-#{@output_format} is assumed"
  puts
  puts "     Shortcuts / Supported Formats:"
  OPTS.each do |long, short, _|
    puts "       #{short} for #{long}"
  end
  exit 1
end

begin
  GetoptLong.new(*OPTS).each do |opt, arg|
    McBean.formats.each do |format|
      if opt == "--#{format}"
        @input_format = format
        @input_file   = arg
      elsif opt == "--to-#{format}"
        @output_format = format
      end
    end
  end
rescue
  _usage
end

if @input_file.nil?
  _usage if ARGV.length != 1
  @input_file = ARGV[0]
end

mcbean = case @input_format
         when "html"
           McBean.document(open(@input_file))
         else
           McBean.send(@input_format, open(@input_file))
         end

puts mcbean.send("to_#{@output_format}")

exit 0
